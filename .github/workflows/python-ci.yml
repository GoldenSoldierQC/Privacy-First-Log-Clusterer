name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.11]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install -r dev-requirements.txt

      - name: Show Python
        run: python --version

      - name: Run linters & type-check
        run: |
          black --check .
          isort --check-only .
          flake8
          mypy .

      - name: Run tests
        run: pytest -q --junitxml=reports/junit.xml --maxfail=1

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: reports

      - name: Run demo and upload generated report
        if: matrix.python-version == '3.11'  # run actual demo only once
        run: |
          python log_clusterer.py --input demo --out test_report.html --sanitize --export-registry test_registry.json
        continue-on-error: false

      - name: Upload generated report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: demo-report
          path: |
            test_report.html
            test_registry.json
